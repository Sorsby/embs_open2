/*
 * simulation.c
 *
 *  Created on: 3 May 2018
 *      Author: Matthew
 */
#include "simulation.h"
#include "math.h"

int i, j;

int ftbl[33]={0,1,1,2,2,4,5,8,11,16,22,32,45,64,90,128,181,256,362,512,724,1024,1448,2048,2896,4096,5792,8192,11585,16384,23170,32768,46340};
int ftbl2[32]={ 32768,33276,33776,34269,34755,35235,35708,36174,36635,37090,37540,37984,38423,38858,39287,39712,40132,40548,40960,41367,41771,42170,42566,42959,43347,43733,44115,44493,44869,45241,45611,45977};

int fisqrt(int val)
{
    int cnt=0;
    int t=val;
    while (t) {cnt++;t>>=1;}
    if (6>=cnt)    t=(val<<(6-cnt));
    else           t=(val>>(cnt-6));

    return (ftbl[cnt]*ftbl2[t&31])>>15;
}

void updateSimulation(struct Particle *particles, struct Attractor *attractors, int num_particles, int num_attractors) {
	for (i = 0; i < num_particles; i++) {
		struct Particle p = particles[i];
		p.x = p.x + p.vx;
		p.y = p.y + p.vy;

		for (j = 0; j < num_attractors; j++) {
			struct Attractor a = attractors[j];
			int exp = ((a.x - p.x)^2) + ((a.y - p.y)^2);
			int d = fisqrt(exp);

			int x_norm;
			int y_norm;
			if (d < 500) {
				x_norm = (a.x - p.x)/d;
				y_norm = (a.y - p.y)/d;

				if (d < 1) {
					x_norm = x_norm * a.g;
					y_norm = y_norm * a.g;
				} else {
					x_norm = x_norm * (1/d) * a.g;
					y_norm = y_norm * (1/d) * a.g;
				}
			}
		}
	}
}
